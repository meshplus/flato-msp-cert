package plugin

import (
	"github.com/meshplus/crypto"
)

//FakeHash,SHA1,SM3,Sm3WithPublicKey, {SHA2,SHA3,KECCAK}X{Size224,Size256,Size384,Size512},total=16
var hashAlgoAll = []int{crypto.FakeHash, crypto.SHA1, crypto.SM3, crypto.Sm3WithPublicKey,
	crypto.SHA2_224, crypto.SHA2_256, crypto.SHA2_384, crypto.SHA2_512,
	crypto.SHA3_224, crypto.SHA3_256, crypto.SHA3_384, crypto.SHA3_512,
	crypto.KECCAK_224, crypto.KECCAK_256, crypto.KECCAK_384, crypto.KECCAK_512}

//{AES, 3DES}X{CBC, ECB, GCM}, SM2_CBC, total=7
var symAlgoAll = []int{crypto.Aes | crypto.CBC, crypto.Aes | crypto.ECB, crypto.Aes | crypto.GCM,
	crypto.Des3 | crypto.CBC, crypto.Des3 | crypto.ECB, crypto.Des3 | crypto.GCM,
	crypto.Sm4 | crypto.CBC}

//Sm2p256v1, Secp256k1, Secp256r1, Secp256k1Recover, Secp384r1, Secp521r1, total=6
var asymAlgoAll = []int{crypto.Sm2p256v1, crypto.Secp256k1, crypto.Secp256r1,
	crypto.Secp256k1Recover, crypto.Secp384r1, crypto.Secp521r1,
	crypto.Rsa2048, crypto.Rsa3072, crypto.Rsa4096}

var msg = []byte("flato")

//var defaultPriv = map[int][]byte{
//	crypto.Sm2p256v1: {0x5e, 0x00, 0xd2, 0x68, 0xf3, 0x57, 0x20, 0xff, 0xb3, 0xe3, 0xcc, 0x8f, 0x44, 0xed, 0x13, 0x6a, 0x7a, 0x76, 0xd4, 0x7e, 0x00, 0x55, 0x2a, 0xb2, 0xf6, 0xac, 0x7b, 0x7f, 0xbf, 0xdd, 0x77, 0x77},
//	crypto.Secp256k1: {0x40, 0xb8, 0x4a, 0xf6, 0x2d, 0xff, 0xfe, 0x62, 0x2b, 0x04, 0xc8, 0xd4, 0xb9, 0x89, 0x50, 0x51, 0xf2, 0x05, 0x64, 0x75, 0x91, 0x50, 0x28, 0xbe, 0x74, 0x58, 0x64, 0xf6, 0x1f, 0x07, 0xed, 0x7a},
//	crypto.Secp256r1: {0xf6, 0x5c, 0x4e, 0x19, 0xeb, 0xf5, 0xdd, 0x5f, 0x25, 0xef, 0xce, 0x0f, 0x9a, 0xf7, 0x04, 0x67, 0x18, 0xbe, 0x10, 0x85, 0x5d, 0xaf, 0xd6, 0xf1, 0x12, 0xe6, 0x5d, 0x91, 0x3f, 0x88, 0x14, 0xbd},
//	crypto.Secp384r1: {0x3f, 0x7d, 0x7c, 0xb8, 0xbf, 0x42, 0xce, 0x07, 0xbe, 0x89, 0x66, 0x21, 0x79, 0xfd, 0xd2, 0xd7, 0x6a, 0xfe, 0xe1, 0xa1, 0xb0, 0xf5, 0x83, 0x4a, 0xab, 0xa4, 0x9b, 0xa6, 0x91, 0x67, 0x44, 0xa5, 0x0d, 0xab, 0xa7, 0x53, 0x32, 0x69, 0x32, 0x12, 0x94, 0xb7, 0xa7, 0x1d, 0x37, 0xa8, 0x9a, 0x7c},
//	crypto.Secp521r1: {0x00, 0x5c, 0x1b, 0x0f, 0xde, 0x89, 0x47, 0xa7, 0x4d, 0x10, 0x5c, 0xd6, 0x76, 0xe3, 0x41, 0x21, 0x16, 0x60, 0x58, 0x9d, 0x24, 0x63, 0x05, 0x31, 0x46, 0x24, 0xe8, 0x85, 0xa7, 0x92, 0x8a, 0x90, 0xd8, 0xe1, 0x3f, 0xd1, 0xbd, 0xc9, 0x9d, 0xbc, 0x6e, 0x2a, 0xbc, 0x90, 0x05, 0x6a, 0xe1, 0x7d, 0xdf, 0x3c, 0xae, 0xcd, 0x18, 0xee, 0x0d, 0xd7, 0x25, 0xf1, 0x55, 0x0a, 0x95, 0x12, 0x73, 0x44, 0x8b, 0xb2},
//}

var defaultPrivPKCS8 = map[int][]byte{
	crypto.Sm2p256v1: {0x30, 0x81, 0x93, 0x02, 0x01, 0x00, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x81, 0x1c, 0xcf, 0x55, 0x01, 0x82, 0x2d, 0x04, 0x79, 0x30, 0x77, 0x02, 0x01, 0x01, 0x02, 0x20, 0x5e, 0x00, 0xd2, 0x68, 0xf3, 0x57, 0x20, 0xff, 0xb3, 0xe3, 0xcc, 0x8f, 0x44, 0xed, 0x13, 0x6a, 0x7a, 0x76, 0xd4, 0x7e, 0x00, 0x55, 0x2a, 0xb2, 0xf6, 0xac, 0x7b, 0x7f, 0xbf, 0xdd, 0x77, 0x77, 0xa0, 0x0a, 0x06, 0x08, 0x2a, 0x81, 0x1c, 0xcf, 0x55, 0x01, 0x82, 0x2d, 0xa1, 0x44, 0x03, 0x42, 0x00, 0x04, 0x38, 0x56, 0xe1, 0xbd, 0x86, 0xd3, 0xd0, 0xc5, 0x5a, 0x83, 0xb6, 0xa6, 0x84, 0x97, 0x7b, 0x04, 0xfb, 0xec, 0xb7, 0x75, 0x1b, 0x78, 0x8b, 0x6c, 0x92, 0x01, 0x95, 0x1c, 0x6d, 0x88, 0x15, 0x0e, 0x47, 0xcf, 0x1e, 0xec, 0x88, 0x0b, 0x99, 0xe3, 0xec, 0x5f, 0x0c, 0x3d, 0xde, 0x00, 0x6d, 0xc1, 0x08, 0x6f, 0x73, 0xc7, 0xe3, 0x02, 0x70, 0x61, 0x6a, 0x8e, 0x59, 0xb3, 0x13, 0x0e, 0x41, 0x8f},
	crypto.Secp256k1: {0x30, 0x81, 0x84, 0x02, 0x01, 0x00, 0x30, 0x10, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x05, 0x2b, 0x81, 0x04, 0x00, 0x0a, 0x04, 0x6d, 0x30, 0x6b, 0x02, 0x01, 0x01, 0x04, 0x20, 0x40, 0xb8, 0x4a, 0xf6, 0x2d, 0xff, 0xfe, 0x62, 0x2b, 0x04, 0xc8, 0xd4, 0xb9, 0x89, 0x50, 0x51, 0xf2, 0x05, 0x64, 0x75, 0x91, 0x50, 0x28, 0xbe, 0x74, 0x58, 0x64, 0xf6, 0x1f, 0x07, 0xed, 0x7a, 0xa1, 0x44, 0x03, 0x42, 0x00, 0x04, 0xd8, 0x65, 0x4e, 0xa1, 0xc2, 0x3d, 0x98, 0xa4, 0x19, 0xbd, 0x41, 0xbb, 0x3d, 0x4f, 0xd9, 0x97, 0xc2, 0x6f, 0xc3, 0xde, 0x55, 0x7d, 0x58, 0x26, 0x41, 0x15, 0x34, 0xaf, 0xa1, 0x58, 0x28, 0x82, 0x29, 0x69, 0x0e, 0xd5, 0x78, 0x9e, 0x7b, 0xca, 0x05, 0x52, 0xee, 0x33, 0xb2, 0x6f, 0x5e, 0x21, 0x09, 0x39, 0x48, 0x72, 0x5e, 0x81, 0x24, 0xc7, 0x80, 0x2e, 0xf8, 0xe8, 0x42, 0xfd, 0x62, 0x81},
	crypto.Secp256r1: {0x30, 0x81, 0x87, 0x02, 0x01, 0x00, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x04, 0x6d, 0x30, 0x6b, 0x02, 0x01, 0x01, 0x04, 0x20, 0xf6, 0x5c, 0x4e, 0x19, 0xeb, 0xf5, 0xdd, 0x5f, 0x25, 0xef, 0xce, 0x0f, 0x9a, 0xf7, 0x04, 0x67, 0x18, 0xbe, 0x10, 0x85, 0x5d, 0xaf, 0xd6, 0xf1, 0x12, 0xe6, 0x5d, 0x91, 0x3f, 0x88, 0x14, 0xbd, 0xa1, 0x44, 0x03, 0x42, 0x00, 0x04, 0xfc, 0xdb, 0x4c, 0x91, 0x5f, 0x03, 0xda, 0x3b, 0x76, 0x1d, 0xa4, 0xf8, 0xe1, 0x5e, 0x3e, 0x4e, 0x7a, 0xae, 0xe3, 0xbb, 0x35, 0x49, 0x0b, 0x65, 0xcf, 0xd5, 0x64, 0x2a, 0xa3, 0x5b, 0xa1, 0xdf, 0xa2, 0xa3, 0x6f, 0xe1, 0x5d, 0xa4, 0x02, 0x52, 0x43, 0x2b, 0x63, 0xba, 0x7d, 0xe6, 0x2d, 0xb2, 0xb3, 0x9d, 0x5c, 0xe4, 0xe3, 0x5f, 0xd0, 0x28, 0xdd, 0xd1, 0xb6, 0x04, 0x41, 0x27, 0xc7, 0xb3},
	crypto.Secp384r1: {0x30, 0x81, 0xb6, 0x02, 0x01, 0x00, 0x30, 0x10, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x05, 0x2b, 0x81, 0x04, 0x00, 0x22, 0x04, 0x81, 0x9e, 0x30, 0x81, 0x9b, 0x02, 0x01, 0x01, 0x04, 0x30, 0x3f, 0x7d, 0x7c, 0xb8, 0xbf, 0x42, 0xce, 0x07, 0xbe, 0x89, 0x66, 0x21, 0x79, 0xfd, 0xd2, 0xd7, 0x6a, 0xfe, 0xe1, 0xa1, 0xb0, 0xf5, 0x83, 0x4a, 0xab, 0xa4, 0x9b, 0xa6, 0x91, 0x67, 0x44, 0xa5, 0x0d, 0xab, 0xa7, 0x53, 0x32, 0x69, 0x32, 0x12, 0x94, 0xb7, 0xa7, 0x1d, 0x37, 0xa8, 0x9a, 0x7c, 0xa1, 0x64, 0x03, 0x62, 0x00, 0x04, 0x55, 0x59, 0x88, 0x0e, 0xe4, 0xd0, 0xfe, 0x5e, 0xaa, 0x2a, 0x05, 0xd0, 0x93, 0x4c, 0x67, 0x56, 0xef, 0x7e, 0x5c, 0xfb, 0xfe, 0x57, 0x1b, 0xa7, 0x6c, 0x30, 0xab, 0x18, 0xb5, 0x52, 0xbc, 0xc1, 0xfd, 0x4a, 0xd3, 0x47, 0x94, 0x03, 0x9a, 0x13, 0x8a, 0x56, 0xcc, 0xe4, 0xa2, 0x7f, 0x86, 0x5c, 0xf5, 0xbe, 0x4f, 0x6b, 0x27, 0xba, 0x5a, 0x67, 0x9b, 0xa2, 0xeb, 0xd3, 0x43, 0xfe, 0x79, 0xb7, 0x9d, 0x2a, 0xe1, 0x1c, 0xdd, 0x2e, 0xc2, 0xb4, 0x6d, 0x22, 0x85, 0x00, 0xc9, 0x93, 0x36, 0xb9, 0x0c, 0xde, 0xf4, 0x5e, 0x68, 0x61, 0xf0, 0x1f, 0x8c, 0xa6, 0xff, 0x18, 0xff, 0x32, 0xeb, 0xcf},
	crypto.Secp521r1: {0x30, 0x81, 0xee, 0x02, 0x01, 0x00, 0x30, 0x10, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06, 0x05, 0x2b, 0x81, 0x04, 0x00, 0x23, 0x04, 0x81, 0xd6, 0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x42, 0x00, 0x5c, 0x1b, 0x0f, 0xde, 0x89, 0x47, 0xa7, 0x4d, 0x10, 0x5c, 0xd6, 0x76, 0xe3, 0x41, 0x21, 0x16, 0x60, 0x58, 0x9d, 0x24, 0x63, 0x05, 0x31, 0x46, 0x24, 0xe8, 0x85, 0xa7, 0x92, 0x8a, 0x90, 0xd8, 0xe1, 0x3f, 0xd1, 0xbd, 0xc9, 0x9d, 0xbc, 0x6e, 0x2a, 0xbc, 0x90, 0x05, 0x6a, 0xe1, 0x7d, 0xdf, 0x3c, 0xae, 0xcd, 0x18, 0xee, 0x0d, 0xd7, 0x25, 0xf1, 0x55, 0x0a, 0x95, 0x12, 0x73, 0x44, 0x8b, 0xb2, 0xa1, 0x81, 0x89, 0x03, 0x81, 0x86, 0x00, 0x04, 0x00, 0x91, 0x84, 0xf7, 0x31, 0x60, 0x49, 0x8b, 0xf0, 0x56, 0xaa, 0xe8, 0x62, 0x74, 0x20, 0x3c, 0xf5, 0xb6, 0xe5, 0x58, 0x37, 0xb6, 0x9e, 0x8c, 0xba, 0xc4, 0x46, 0xf5, 0xda, 0x51, 0x2e, 0x61, 0xc5, 0x08, 0xa5, 0x36, 0x20, 0x7b, 0x02, 0x0a, 0xaa, 0x3a, 0x7e, 0x5d, 0xb3, 0xd3, 0x58, 0x9e, 0x37, 0x74, 0x68, 0x4a, 0xb0, 0x1f, 0x86, 0xca, 0x56, 0x49, 0xe9, 0x55, 0xa4, 0xbf, 0x72, 0x31, 0xd2, 0x7c, 0x01, 0x35, 0x32, 0x75, 0x1f, 0x23, 0xb1, 0x4d, 0xa8, 0x9f, 0x0d, 0xec, 0xa2, 0x8b, 0xbb, 0x89, 0x45, 0x3a, 0x50, 0xe0, 0xf9, 0x50, 0x1f, 0xf4, 0x26, 0x45, 0x14, 0x1a, 0x2d, 0xe9, 0x70, 0xcd, 0xc8, 0x7f, 0xc8, 0x34, 0xb2, 0x66, 0x76, 0xe0, 0x0a, 0x93, 0xce, 0x0e, 0xff, 0xef, 0xe3, 0x55, 0x5e, 0x98, 0xd1, 0xed, 0x5b, 0xdf, 0x21, 0x11, 0xa6, 0x61, 0xf7, 0x71, 0x77, 0xf3, 0xf1, 0x81, 0xa4, 0x2c},
}

var defaultPub = map[int][]byte{
	crypto.Sm2p256v1: {0x04, 0x38, 0x56, 0xe1, 0xbd, 0x86, 0xd3, 0xd0, 0xc5, 0x5a, 0x83, 0xb6, 0xa6, 0x84, 0x97, 0x7b, 0x04, 0xfb, 0xec, 0xb7, 0x75, 0x1b, 0x78, 0x8b, 0x6c, 0x92, 0x01, 0x95, 0x1c, 0x6d, 0x88, 0x15, 0x0e, 0x47, 0xcf, 0x1e, 0xec, 0x88, 0x0b, 0x99, 0xe3, 0xec, 0x5f, 0x0c, 0x3d, 0xde, 0x00, 0x6d, 0xc1, 0x08, 0x6f, 0x73, 0xc7, 0xe3, 0x02, 0x70, 0x61, 0x6a, 0x8e, 0x59, 0xb3, 0x13, 0x0e, 0x41, 0x8f},
	crypto.Secp256k1: {0x04, 0xd8, 0x65, 0x4e, 0xa1, 0xc2, 0x3d, 0x98, 0xa4, 0x19, 0xbd, 0x41, 0xbb, 0x3d, 0x4f, 0xd9, 0x97, 0xc2, 0x6f, 0xc3, 0xde, 0x55, 0x7d, 0x58, 0x26, 0x41, 0x15, 0x34, 0xaf, 0xa1, 0x58, 0x28, 0x82, 0x29, 0x69, 0x0e, 0xd5, 0x78, 0x9e, 0x7b, 0xca, 0x05, 0x52, 0xee, 0x33, 0xb2, 0x6f, 0x5e, 0x21, 0x09, 0x39, 0x48, 0x72, 0x5e, 0x81, 0x24, 0xc7, 0x80, 0x2e, 0xf8, 0xe8, 0x42, 0xfd, 0x62, 0x81},
	crypto.Secp256r1: {0x04, 0xfc, 0xdb, 0x4c, 0x91, 0x5f, 0x03, 0xda, 0x3b, 0x76, 0x1d, 0xa4, 0xf8, 0xe1, 0x5e, 0x3e, 0x4e, 0x7a, 0xae, 0xe3, 0xbb, 0x35, 0x49, 0x0b, 0x65, 0xcf, 0xd5, 0x64, 0x2a, 0xa3, 0x5b, 0xa1, 0xdf, 0xa2, 0xa3, 0x6f, 0xe1, 0x5d, 0xa4, 0x02, 0x52, 0x43, 0x2b, 0x63, 0xba, 0x7d, 0xe6, 0x2d, 0xb2, 0xb3, 0x9d, 0x5c, 0xe4, 0xe3, 0x5f, 0xd0, 0x28, 0xdd, 0xd1, 0xb6, 0x04, 0x41, 0x27, 0xc7, 0xb3},
	crypto.Secp384r1: {0x04, 0x55, 0x59, 0x88, 0x0e, 0xe4, 0xd0, 0xfe, 0x5e, 0xaa, 0x2a, 0x05, 0xd0, 0x93, 0x4c, 0x67, 0x56, 0xef, 0x7e, 0x5c, 0xfb, 0xfe, 0x57, 0x1b, 0xa7, 0x6c, 0x30, 0xab, 0x18, 0xb5, 0x52, 0xbc, 0xc1, 0xfd, 0x4a, 0xd3, 0x47, 0x94, 0x03, 0x9a, 0x13, 0x8a, 0x56, 0xcc, 0xe4, 0xa2, 0x7f, 0x86, 0x5c, 0xf5, 0xbe, 0x4f, 0x6b, 0x27, 0xba, 0x5a, 0x67, 0x9b, 0xa2, 0xeb, 0xd3, 0x43, 0xfe, 0x79, 0xb7, 0x9d, 0x2a, 0xe1, 0x1c, 0xdd, 0x2e, 0xc2, 0xb4, 0x6d, 0x22, 0x85, 0x00, 0xc9, 0x93, 0x36, 0xb9, 0x0c, 0xde, 0xf4, 0x5e, 0x68, 0x61, 0xf0, 0x1f, 0x8c, 0xa6, 0xff, 0x18, 0xff, 0x32, 0xeb, 0xcf},
	crypto.Secp521r1: {0x04, 0x00, 0x91, 0x84, 0xf7, 0x31, 0x60, 0x49, 0x8b, 0xf0, 0x56, 0xaa, 0xe8, 0x62, 0x74, 0x20, 0x3c, 0xf5, 0xb6, 0xe5, 0x58, 0x37, 0xb6, 0x9e, 0x8c, 0xba, 0xc4, 0x46, 0xf5, 0xda, 0x51, 0x2e, 0x61, 0xc5, 0x08, 0xa5, 0x36, 0x20, 0x7b, 0x02, 0x0a, 0xaa, 0x3a, 0x7e, 0x5d, 0xb3, 0xd3, 0x58, 0x9e, 0x37, 0x74, 0x68, 0x4a, 0xb0, 0x1f, 0x86, 0xca, 0x56, 0x49, 0xe9, 0x55, 0xa4, 0xbf, 0x72, 0x31, 0xd2, 0x7c, 0x01, 0x35, 0x32, 0x75, 0x1f, 0x23, 0xb1, 0x4d, 0xa8, 0x9f, 0x0d, 0xec, 0xa2, 0x8b, 0xbb, 0x89, 0x45, 0x3a, 0x50, 0xe0, 0xf9, 0x50, 0x1f, 0xf4, 0x26, 0x45, 0x14, 0x1a, 0x2d, 0xe9, 0x70, 0xcd, 0xc8, 0x7f, 0xc8, 0x34, 0xb2, 0x66, 0x76, 0xe0, 0x0a, 0x93, 0xce, 0x0e, 0xff, 0xef, 0xe3, 0x55, 0x5e, 0x98, 0xd1, 0xed, 0x5b, 0xdf, 0x21, 0x11, 0xa6, 0x61, 0xf7, 0x71, 0x77, 0xf3, 0xf1, 0x81, 0xa4, 0x2c},
}

var defaultSign = map[int][]byte{
	crypto.Sm2p256v1: {0x30, 0x45, 0x02, 0x21, 0x00, 0xed, 0x48, 0x50, 0x26, 0x86, 0xd0, 0x91, 0x26, 0x75, 0xa7, 0x8c, 0xd8, 0x68, 0x0d, 0x33, 0x51, 0xb0, 0xe2, 0xce, 0x17, 0xdb, 0x56, 0x8e, 0x80, 0x0b, 0xab, 0x85, 0xfd, 0x3e, 0x49, 0xda, 0x6b, 0x02, 0x20, 0x7f, 0x56, 0x66, 0xa9, 0x9d, 0xd1, 0x4a, 0x69, 0x88, 0x13, 0xff, 0xc8, 0xc2, 0xc1, 0xb9, 0xd6, 0x12, 0x07, 0x29, 0x1d, 0x71, 0x85, 0x09, 0x2d, 0x6f, 0x96, 0x00, 0xa1, 0xf1, 0xc7, 0xd7, 0xf9},
	crypto.Secp256k1: {0x80, 0x2a, 0xf5, 0x88, 0x54, 0x90, 0x15, 0x73, 0x04, 0xb8, 0x8c, 0xee, 0xa5, 0x5e, 0x28, 0x2a, 0x30, 0x63, 0x3e, 0x36, 0xd0, 0x62, 0x4d, 0x84, 0x8b, 0x79, 0xa7, 0xb5, 0xff, 0xc4, 0x9a, 0x1b, 0x27, 0x13, 0x04, 0x69, 0x02, 0x14, 0x62, 0xa9, 0xa9, 0x62, 0xbf, 0x7f, 0x8e, 0x7b, 0xac, 0x26, 0xc1, 0x41, 0x2b, 0x00, 0xf2, 0xcf, 0x0c, 0xe6, 0x65, 0x22, 0x82, 0x68, 0xfa, 0x6e, 0xef, 0x3b, 0x00},
	crypto.Secp256r1: {0x30, 0x45, 0x02, 0x21, 0x00, 0xf4, 0x1c, 0x1e, 0x66, 0x78, 0xd0, 0xa8, 0x74, 0x55, 0x7f, 0xfc, 0x5e, 0xb0, 0xd8, 0xe8, 0xd8, 0x8c, 0x8f, 0x52, 0x66, 0x68, 0x0e, 0xba, 0xa7, 0x6d, 0x7a, 0xbc, 0x50, 0xbc, 0xef, 0x9b, 0x8b, 0x02, 0x20, 0x32, 0xc1, 0xb3, 0x2e, 0x90, 0xea, 0x6e, 0xc4, 0x29, 0xf4, 0xcd, 0x7c, 0x27, 0x07, 0x36, 0x24, 0x3d, 0x79, 0x02, 0x78, 0xae, 0x45, 0xae, 0x60, 0x00, 0x27, 0x91, 0x82, 0xf1, 0x17, 0x92, 0x2d},
	crypto.Secp384r1: {0x30, 0x66, 0x02, 0x31, 0x00, 0xc2, 0x83, 0xca, 0x2e, 0x1e, 0xe4, 0x86, 0x69, 0xf3, 0x08, 0x3d, 0x33, 0x61, 0x39, 0xc0, 0x5a, 0xcf, 0xc8, 0x5c, 0x89, 0xd3, 0x2c, 0x39, 0x92, 0xbd, 0x90, 0x4f, 0x8e, 0x26, 0xa4, 0x3f, 0xa5, 0xd7, 0x8a, 0x90, 0x29, 0xe5, 0x35, 0xd8, 0xd0, 0x85, 0xa6, 0xbc, 0x63, 0xb1, 0x2c, 0x0b, 0x07, 0x02, 0x31, 0x00, 0xb6, 0xf7, 0x33, 0x1a, 0xe0, 0x79, 0x6e, 0x12, 0x69, 0xf9, 0xbd, 0x11, 0xac, 0x01, 0xa1, 0x23, 0xd2, 0xfb, 0xec, 0x5c, 0x6a, 0x66, 0x2c, 0x63, 0x7d, 0xec, 0xb0, 0x9e, 0x2a, 0x3c, 0x59, 0x4d, 0x0e, 0x1d, 0x58, 0x35, 0xb5, 0x9b, 0xfe, 0xda, 0x26, 0xc4, 0xba, 0x93, 0xb7, 0xd4, 0x98, 0x4b},
	crypto.Secp521r1: {0x30, 0x81, 0x87, 0x02, 0x42, 0x00, 0x94, 0x8a, 0xb8, 0x3d, 0xd2, 0xde, 0x22, 0x27, 0xef, 0x54, 0x0a, 0x88, 0x8a, 0xa5, 0x46, 0xa8, 0x39, 0xa0, 0x86, 0x02, 0x2d, 0x02, 0x8d, 0x0e, 0x7e, 0xba, 0x93, 0xa1, 0xdb, 0xb6, 0xf2, 0x79, 0xd2, 0x15, 0xb4, 0xdd, 0x80, 0x63, 0x7b, 0x8b, 0x3e, 0xed, 0x0b, 0x88, 0x5e, 0x66, 0x96, 0xf4, 0xf2, 0x85, 0xb9, 0xec, 0xdd, 0x25, 0xb5, 0xee, 0xef, 0x0e, 0x93, 0x31, 0x4d, 0xa2, 0x21, 0xf4, 0x5e, 0x02, 0x41, 0x2e, 0x26, 0xfa, 0x0f, 0xf4, 0x9c, 0x05, 0xed, 0xf5, 0x48, 0x6f, 0x94, 0xf1, 0x98, 0xf2, 0x9f, 0x9e, 0x9a, 0xb3, 0xf8, 0x58, 0xde, 0x4b, 0x22, 0x53, 0xdb, 0x26, 0x80, 0x98, 0x4f, 0x5c, 0x5e, 0x9c, 0x56, 0xce, 0x13, 0xac, 0xcf, 0x09, 0x1d, 0xad, 0xd0, 0x52, 0xab, 0x80, 0xeb, 0x75, 0xdf, 0x43, 0x25, 0x77, 0x21, 0x2d, 0x25, 0xd9, 0x1e, 0xc5, 0x82, 0x8e, 0x92, 0x04, 0xed, 0xf0, 0xee, 0x2b},
}

func getKey(function Function, mode int) uint64 {
	return uint64(function)<<32 | uint64(mode)
}
func getModeFromKey(k uint64) int {
	return int(k & 0x00000000ffffffff)
}

func copySlice(in []int) []int {
	ret := make([]int, 0, len(in))
	copy(ret, in)
	return ret
}